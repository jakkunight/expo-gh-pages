{"version":3,"sources":["lib/connector.js","App.js"],"names":["connector","link","fields","contents","a","async","console","log","length","body","FormData","i","append","fetch","method","mode","redirect","headers","res","JSON","json","data","parse","App","NativeBaseProvider","Text","fontSize","Button","colorScheme","onPress"],"mappings":"4IA4CeA,EA5CG,SAAOC,EAAMC,EAAQC,GAArB,qBAAAC,EAAAC,OAAA,mDACVJ,GAAuB,iBAARA,EADL,uBAEVK,QAAQC,IAAI,wCAFF,mBAGF,GAHE,UAKNL,GAAWC,EALL,wBAMNG,QAAQC,IAAI,wCANN,mBAOE,GAPF,WASc,iBAAVL,GAAyC,iBAAZC,EATjC,wBAUFG,QAAQC,IAAI,6CAVV,mBAWM,GAXN,WAaCL,EAAOM,QAAUL,EAASK,OAb3B,wBAcEF,QAAQC,IAAI,4CAdd,mBAeU,GAfV,QAkBE,IADME,EAAO,IAAIC,SACTC,EAAI,EAAGA,EAAIT,EAAOM,OAAQG,IAC9BF,EAAKG,OAAOV,EAAOS,GAAIR,EAASQ,IAnBtC,6BAAAP,EAAA,MAsBwBS,MAAMZ,EAAM,CAC1Ba,OAAQ,OACRC,KAAM,OACNC,SAAU,SACVC,QAAS,CACL,8BAA+B,KAEnCR,UA7BV,eAsBYS,EAtBZ,YA+BmBC,KA/BnB,YAAAf,EAAA,MA+BoCc,EAAIE,QA/BxC,2BA+BYC,EA/BZ,KA+BwBC,MA/BxB,kCAgCaD,GAhCb,0CAkCMf,QAAQC,IAAI,mCACZD,QAAQC,IAAR,MAnCN,mBAoCc,GApCd,mE,QCkBHgB,IAdH,WACV,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAMC,SAAS,IAAf,0BACA,cAACC,EAAA,EAAD,CAAQC,YAAY,UAAUC,QAAS,oBAAAzB,EAAAC,OAAA,gDACrCL,EAAU,qDAAsD,CAAC,OAAQ,cAAe,OAAQ,aAAc,YAAa,CAAC,SAAU,uBAAwB,OAAQ,OAAQ,SADzI,6DAAvC,+B","file":"static/js/app.8239ee25.chunk.js","sourcesContent":["const connector = async (link, fields, contents) => {\n    if(!link || typeof link != \"string\"){\n        console.log(\"[APP -> CONNECTOR] NO LINK PROVIDED.\");\n        return -1;\n    }else{\n        if(!fields || !contents){\n            console.log(\"[APP -> CONNECTOR] NO DATA PROVIDED.\");\n            return -1;\n        }else{\n            if(typeof fields != \"object\" || typeof contents != \"object\"){\n                console.log(\"[APP -> CONNECTOR] DATATYPE IS INCORRECT.\");\n                return -1;\n            }else{\n                if(fields.length != contents.length){\n                    console.log(\"[APP -> CONNECTOR] DATA IS INCONSISTENT.\");\n                    return -1;\n                }else{\n                    const body = new FormData();\n                    for(var i = 0; i < fields.length; i++){\n                        body.append(fields[i], contents[i]);\n                    }\n                    try{\n                        const res = await fetch(link, {\n                            method: 'POST',\n                            mode: 'cors',\n                            redirect: 'follow',\n                            headers: {\n                                'Access-Control-Allow-Origin': '*'\n                            },\n                            body\n                        });\n                        const data = JSON.parse(await res.json());\n                        return data;\n                    }catch(error){\n                        console.log(\"[APP -> CONNECTOR] FATAL ERROR.\");\n                        console.log(error);\n                        return -1;\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default connector;","import React, {} from 'react';\nimport { NativeBaseProvider, Text, Button } from 'native-base';\nimport connector from './lib/connector';\n\nconst App = () => {\n  return (\n    <NativeBaseProvider>\n      <Text fontSize=\"m\">Hello Doumo!</Text>\n      <Button colorScheme=\"primary\" onPress={async () => {\n        connector('https://jakku-night.herokuapp.com/products/insert/', [\"name\", \"description\", \"cost\", \"sell_price\", \"quantity\"], [\"Onions\", \"Onions from Paraguay\", \"1000\", \"3000\", \"1000\"]);\n      }}>\n        Send Request\n      </Button>\n      \n    </NativeBaseProvider>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}